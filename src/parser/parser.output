Terminals unused in grammar

    INST_MVN
    INST_AND
    INST_ORR
    INST_XOR
    INST_SUB
    INST_MUL
    INST_DIV
    INST_REM
    INST_LSL
    INST_LSR
    INST_CMP
    INST_PRR
    INST_PRM
    SEP
    EL
    END_OF_FILE


Grammar

    0 $accept: program $end

    1 program: ε
    2        | SECTION section_content NEW_LINE program

    3 section_content: PROG_SECTION NEW_LINE text
    4                | DATA_SECTION NEW_LINE
    5                | BSS_SECTION NEW_LINE

    6 text: declaration instruction NEW_LINE
    7     | declaration NEW_LINE
    8     | instruction NEW_LINE
    9     | NEW_LINE

   10 declaration: IDENTIFIER ':'

   11 instruction: copy_operation
   12            | calc_operation
   13            | jump
   14            | load_store

   15 copy_operation: INST_MOV reg immediat_value
   16               | INST_MOV reg reg

   17 calc_operation: INST_ADD reg reg immediat_value
   18               | INST_ADD reg reg reg

   19 jump: INST_JMP IDENTIFIER
   20     | INST_JMP immediat_value

   21 load_store: INST_LDR reg reg reg
   22           | INST_STR reg reg reg

   23 immediat_value: BIN_VALUE
   24               | DEC_VALUE
   25               | HEX_VALUE

   26 reg: REG0
   27    | REG1
   28    | REG2
   29    | REG3
   30    | REG4
   31    | REG5
   32    | REG6
   33    | REG7
   34    | REG8
   35    | REG9
   36    | REG10
   37    | REG11
   38    | REG12
   39    | REG13
   40    | REG14
   41    | REG15


Terminals, with rules where they appear

    $end (0) 0
    ':' (58) 10
    error (256)
    SECTION (258) 2
    PROG_SECTION (259) 3
    DATA_SECTION (260) 4
    BSS_SECTION (261) 5
    NEW_LINE (262) 2 3 4 5 6 7 8 9
    INST_MOV (263) 15 16
    INST_MVN (264)
    INST_AND (265)
    INST_ORR (266)
    INST_XOR (267)
    INST_ADD (268) 17 18
    INST_SUB (269)
    INST_MUL (270)
    INST_DIV (271)
    INST_REM (272)
    INST_LSL (273)
    INST_LSR (274)
    INST_LDR (275) 21
    INST_STR (276) 22
    INST_CMP (277)
    INST_JMP (278) 19 20
    INST_PRR (279)
    INST_PRM (280)
    IDENTIFIER <identifier> (281) 10 19
    BIN_VALUE <rawImmediateValue> (282) 23
    DEC_VALUE <rawImmediateValue> (283) 24
    HEX_VALUE <rawImmediateValue> (284) 25
    REG0 <rawRegister> (285) 26
    REG1 <rawRegister> (286) 27
    REG2 <rawRegister> (287) 28
    REG3 <rawRegister> (288) 29
    REG4 <rawRegister> (289) 30
    REG5 <rawRegister> (290) 31
    REG6 <rawRegister> (291) 32
    REG7 <rawRegister> (292) 33
    REG8 <rawRegister> (293) 34
    REG9 <rawRegister> (294) 35
    REG10 <rawRegister> (295) 36
    REG11 <rawRegister> (296) 37
    REG12 <rawRegister> (297) 38
    REG13 <rawRegister> (298) 39
    REG14 <rawRegister> (299) 40
    REG15 <rawRegister> (300) 41
    SEP (301)
    EL (302)
    END_OF_FILE (303)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1 2
        on right: 0 2
    section_content (52)
        on left: 3 4 5
        on right: 2
    text (53)
        on left: 6 7 8 9
        on right: 3
    declaration (54)
        on left: 10
        on right: 6 7
    instruction (55)
        on left: 11 12 13 14
        on right: 6 8
    copy_operation <instruction> (56)
        on left: 15 16
        on right: 11
    calc_operation <instruction> (57)
        on left: 17 18
        on right: 12
    jump <instruction> (58)
        on left: 19 20
        on right: 13
    load_store <instruction> (59)
        on left: 21 22
        on right: 14
    immediat_value <immediateValue> (60)
        on left: 23 24 25
        on right: 15 17 20
    reg <registerCode> (61)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 15 16 17 18 21 22


State 0

    0 $accept: • program $end

    SECTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program  go to state 2


State 1

    2 program: SECTION • section_content NEW_LINE program

    PROG_SECTION  shift, and go to state 3
    DATA_SECTION  shift, and go to state 4
    BSS_SECTION   shift, and go to state 5

    section_content  go to state 6


State 2

    0 $accept: program • $end

    $end  shift, and go to state 7


State 3

    3 section_content: PROG_SECTION • NEW_LINE text

    NEW_LINE  shift, and go to state 8


State 4

    4 section_content: DATA_SECTION • NEW_LINE

    NEW_LINE  shift, and go to state 9


State 5

    5 section_content: BSS_SECTION • NEW_LINE

    NEW_LINE  shift, and go to state 10


State 6

    2 program: SECTION section_content • NEW_LINE program

    NEW_LINE  shift, and go to state 11


State 7

    0 $accept: program $end •

    $default  accept


State 8

    3 section_content: PROG_SECTION NEW_LINE • text

    NEW_LINE    shift, and go to state 12
    INST_MOV    shift, and go to state 13
    INST_ADD    shift, and go to state 14
    INST_LDR    shift, and go to state 15
    INST_STR    shift, and go to state 16
    INST_JMP    shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    text            go to state 19
    declaration     go to state 20
    instruction     go to state 21
    copy_operation  go to state 22
    calc_operation  go to state 23
    jump            go to state 24
    load_store      go to state 25


State 9

    4 section_content: DATA_SECTION NEW_LINE •

    $default  reduce using rule 4 (section_content)


State 10

    5 section_content: BSS_SECTION NEW_LINE •

    $default  reduce using rule 5 (section_content)


State 11

    2 program: SECTION section_content NEW_LINE • program

    SECTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program  go to state 26


State 12

    9 text: NEW_LINE •

    $default  reduce using rule 9 (text)


State 13

   15 copy_operation: INST_MOV • reg immediat_value
   16               | INST_MOV • reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 43


State 14

   17 calc_operation: INST_ADD • reg reg immediat_value
   18               | INST_ADD • reg reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 44


State 15

   21 load_store: INST_LDR • reg reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 45


State 16

   22 load_store: INST_STR • reg reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 46


State 17

   19 jump: INST_JMP • IDENTIFIER
   20     | INST_JMP • immediat_value

    IDENTIFIER  shift, and go to state 47
    BIN_VALUE   shift, and go to state 48
    DEC_VALUE   shift, and go to state 49
    HEX_VALUE   shift, and go to state 50

    immediat_value  go to state 51


State 18

   10 declaration: IDENTIFIER • ':'

    ':'  shift, and go to state 52


State 19

    3 section_content: PROG_SECTION NEW_LINE text •

    $default  reduce using rule 3 (section_content)


State 20

    6 text: declaration • instruction NEW_LINE
    7     | declaration • NEW_LINE

    NEW_LINE  shift, and go to state 53
    INST_MOV  shift, and go to state 13
    INST_ADD  shift, and go to state 14
    INST_LDR  shift, and go to state 15
    INST_STR  shift, and go to state 16
    INST_JMP  shift, and go to state 17

    instruction     go to state 54
    copy_operation  go to state 22
    calc_operation  go to state 23
    jump            go to state 24
    load_store      go to state 25


State 21

    8 text: instruction • NEW_LINE

    NEW_LINE  shift, and go to state 55


State 22

   11 instruction: copy_operation •

    $default  reduce using rule 11 (instruction)


State 23

   12 instruction: calc_operation •

    $default  reduce using rule 12 (instruction)


State 24

   13 instruction: jump •

    $default  reduce using rule 13 (instruction)


State 25

   14 instruction: load_store •

    $default  reduce using rule 14 (instruction)


State 26

    2 program: SECTION section_content NEW_LINE program •

    $default  reduce using rule 2 (program)


State 27

   26 reg: REG0 •

    $default  reduce using rule 26 (reg)


State 28

   27 reg: REG1 •

    $default  reduce using rule 27 (reg)


State 29

   28 reg: REG2 •

    $default  reduce using rule 28 (reg)


State 30

   29 reg: REG3 •

    $default  reduce using rule 29 (reg)


State 31

   30 reg: REG4 •

    $default  reduce using rule 30 (reg)


State 32

   31 reg: REG5 •

    $default  reduce using rule 31 (reg)


State 33

   32 reg: REG6 •

    $default  reduce using rule 32 (reg)


State 34

   33 reg: REG7 •

    $default  reduce using rule 33 (reg)


State 35

   34 reg: REG8 •

    $default  reduce using rule 34 (reg)


State 36

   35 reg: REG9 •

    $default  reduce using rule 35 (reg)


State 37

   36 reg: REG10 •

    $default  reduce using rule 36 (reg)


State 38

   37 reg: REG11 •

    $default  reduce using rule 37 (reg)


State 39

   38 reg: REG12 •

    $default  reduce using rule 38 (reg)


State 40

   39 reg: REG13 •

    $default  reduce using rule 39 (reg)


State 41

   40 reg: REG14 •

    $default  reduce using rule 40 (reg)


State 42

   41 reg: REG15 •

    $default  reduce using rule 41 (reg)


State 43

   15 copy_operation: INST_MOV reg • immediat_value
   16               | INST_MOV reg • reg

    BIN_VALUE  shift, and go to state 48
    DEC_VALUE  shift, and go to state 49
    HEX_VALUE  shift, and go to state 50
    REG0       shift, and go to state 27
    REG1       shift, and go to state 28
    REG2       shift, and go to state 29
    REG3       shift, and go to state 30
    REG4       shift, and go to state 31
    REG5       shift, and go to state 32
    REG6       shift, and go to state 33
    REG7       shift, and go to state 34
    REG8       shift, and go to state 35
    REG9       shift, and go to state 36
    REG10      shift, and go to state 37
    REG11      shift, and go to state 38
    REG12      shift, and go to state 39
    REG13      shift, and go to state 40
    REG14      shift, and go to state 41
    REG15      shift, and go to state 42

    immediat_value  go to state 56
    reg             go to state 57


State 44

   17 calc_operation: INST_ADD reg • reg immediat_value
   18               | INST_ADD reg • reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 58


State 45

   21 load_store: INST_LDR reg • reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 59


State 46

   22 load_store: INST_STR reg • reg reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 60


State 47

   19 jump: INST_JMP IDENTIFIER •

    $default  reduce using rule 19 (jump)


State 48

   23 immediat_value: BIN_VALUE •

    $default  reduce using rule 23 (immediat_value)


State 49

   24 immediat_value: DEC_VALUE •

    $default  reduce using rule 24 (immediat_value)


State 50

   25 immediat_value: HEX_VALUE •

    $default  reduce using rule 25 (immediat_value)


State 51

   20 jump: INST_JMP immediat_value •

    $default  reduce using rule 20 (jump)


State 52

   10 declaration: IDENTIFIER ':' •

    $default  reduce using rule 10 (declaration)


State 53

    7 text: declaration NEW_LINE •

    $default  reduce using rule 7 (text)


State 54

    6 text: declaration instruction • NEW_LINE

    NEW_LINE  shift, and go to state 61


State 55

    8 text: instruction NEW_LINE •

    $default  reduce using rule 8 (text)


State 56

   15 copy_operation: INST_MOV reg immediat_value •

    $default  reduce using rule 15 (copy_operation)


State 57

   16 copy_operation: INST_MOV reg reg •

    $default  reduce using rule 16 (copy_operation)


State 58

   17 calc_operation: INST_ADD reg reg • immediat_value
   18               | INST_ADD reg reg • reg

    BIN_VALUE  shift, and go to state 48
    DEC_VALUE  shift, and go to state 49
    HEX_VALUE  shift, and go to state 50
    REG0       shift, and go to state 27
    REG1       shift, and go to state 28
    REG2       shift, and go to state 29
    REG3       shift, and go to state 30
    REG4       shift, and go to state 31
    REG5       shift, and go to state 32
    REG6       shift, and go to state 33
    REG7       shift, and go to state 34
    REG8       shift, and go to state 35
    REG9       shift, and go to state 36
    REG10      shift, and go to state 37
    REG11      shift, and go to state 38
    REG12      shift, and go to state 39
    REG13      shift, and go to state 40
    REG14      shift, and go to state 41
    REG15      shift, and go to state 42

    immediat_value  go to state 62
    reg             go to state 63


State 59

   21 load_store: INST_LDR reg reg • reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 64


State 60

   22 load_store: INST_STR reg reg • reg

    REG0   shift, and go to state 27
    REG1   shift, and go to state 28
    REG2   shift, and go to state 29
    REG3   shift, and go to state 30
    REG4   shift, and go to state 31
    REG5   shift, and go to state 32
    REG6   shift, and go to state 33
    REG7   shift, and go to state 34
    REG8   shift, and go to state 35
    REG9   shift, and go to state 36
    REG10  shift, and go to state 37
    REG11  shift, and go to state 38
    REG12  shift, and go to state 39
    REG13  shift, and go to state 40
    REG14  shift, and go to state 41
    REG15  shift, and go to state 42

    reg  go to state 65


State 61

    6 text: declaration instruction NEW_LINE •

    $default  reduce using rule 6 (text)


State 62

   17 calc_operation: INST_ADD reg reg immediat_value •

    $default  reduce using rule 17 (calc_operation)


State 63

   18 calc_operation: INST_ADD reg reg reg •

    $default  reduce using rule 18 (calc_operation)


State 64

   21 load_store: INST_LDR reg reg reg •

    $default  reduce using rule 21 (load_store)


State 65

   22 load_store: INST_STR reg reg reg •

    $default  reduce using rule 22 (load_store)
